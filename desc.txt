Launch files are scripts that allow you to start multiple executables simultaneously. These executables can be:
  Within the same C++ package
  In different C++ packages
  Across multiple packages, launching different executables from entirely separate packages
Launch files help streamline the execution of complex ROS 2 systems, making it easier to manage multiple nodes and processes efficiently.


To use launch files with C++ packages, we need the following:
  A launch folder inside the ROS2 package.
  A launch file inside the launch folder.
  Ensure the launch folder is included in the CMakeLists.txt so it can be found.
The goal is to create a launch file that can start TWO C++ executables at the same time for two different robots.
  


from launch import LaunchDescription
from launch_ros.actions import Node

def generate_launch_description():
    return LaunchDescription([
        Node(
            package='mars_rover_systems',
            executable='heartbeat_executable',
            output='screen'),
        Node(
            package='mars_rover_systems',
            executable='heartbeat_executable2',
            output='screen')
    ])


Within the LaunchDescription object, create a node and specify the following parameters:
  package=The name of the package that contains the ROS2 program to execute.
  executable=The name of the C++ executable defined in the CMakeLists.txt.
  output=The type of output channel for printing the program's output.

We need to configure CMakeLists.txt to ensure that ROS2 can find and access the .launch.py files in the launch folder.
To achieve this, we need to add an install directive for the launch directory.
This entry specifies the locations where ROS2 can find all the files in our package.
We need to add the following to our CMakeLists.txt:

# Install launch files
install(DIRECTORY launch
  DESTINATION share/${PROJECT_NAME}/)

## Package Creation and compilation
  ros2 pkg create --build-type ament_cmake mars_rover_systems --dependencies rclcpp
  colcon build --packages-select mars_rover_systems
  ros2 launch <ros2_package_name> <launch_file_name.launch.py>
  ros2 run mars_rover_tasks subscriber_obstacle_detector_executable
